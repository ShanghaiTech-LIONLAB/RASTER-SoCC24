project(raster)
cmake_minimum_required(VERSION 3.4)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_FLAGS "-fopenmp")
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/modules")

find_package(OpenMP REQUIRED)
find_package(MPI REQUIRED)
include(FindNetCDF)
find_package(ADIOS2 REQUIRED)

message("netCDF_FOUND: ${NetCDF_FOUND}")
message("netCDF_INCLUDE_DIR: ${NetCDF_INCLUDE_DIR}")
message("NetCDF_LIBRARIES: ${NetCDF_LIBRARIES}")
message("NetCDF_VERSION: ${NetCDF_VERSION}")
message(STATUS "Using MPI_INCLUDE_PATH: ${MPI_INCLUDE_PATH}")
message(STATUS "Using MPI_C_LIBRARIES: ${MPI_C_LIBRARIES}")

include_directories(${NetCDF_INCLUDE_DIR})
include_directories(SYSTEM ${MPI_INCLUDE_PATH})

get_filename_component(NCREGION_DIR ${CMAKE_CURRENT_SOURCE_DIR} ABSOLUTE)
set(NCREGION_SRC_DIR ${NCREGION_DIR})
set(NCREGION_TEST_DIR ${NCREGION_DIR}/test)
set(NCREGION_PERF_DIR ${NCREGION_DIR}/perf)
set(BUILD_TEST 1)

file(GLOB ALL_HEADERS ${NCREGION_SRC_DIR}/*.h)
file(GLOB ALL_CXX_SOURCES ${NCREGION_SRC_DIR}/*.cpp)
file(GLOB ALL_C_SOURCES ${NCREGION_SRC_DIR}/*.c)
file(GLOB ALL_TEST_SOURCES ${NCREGION_TEST_DIR}/*.cpp)
file(GLOB ALL_PERF_SOURCES ${NCREGION_PERF_DIR}/*.cpp)

add_library(raster SHARED ${ALL_HEADERS} ${ALL_C_SOURCES} ${ALL_CXX_SOURCES})
target_link_libraries(raster ${NetCDF_LIBRARIES})
if(OpenMP_CXX_FOUND)
    target_link_libraries(raster OpenMP::OpenMP_CXX)
endif()

foreach(PROG ${ALL_PERF_SOURCES})
    get_filename_component(EXECNAME ${PROG} NAME_WE)
    add_executable(${EXECNAME} ${PROG})
    target_link_libraries(${EXECNAME} raster ${NetCDF_LIBRARIES} ${MPI_CXX_LIBRARIES})  
endforeach()

if (${BUILD_TEST})
    foreach(TESTFILE ${ALL_TEST_SOURCES})
        get_filename_component(EXECNAME ${TESTFILE} NAME_WE)
        add_executable(test_${EXECNAME} ${TESTFILE})
        target_link_libraries(test_${EXECNAME} raster ${NetCDF_LIBRARIES} ${MPI_CXX_LIBRARIES} adios2::cxx11_mpi)  
    endforeach()
endif()
